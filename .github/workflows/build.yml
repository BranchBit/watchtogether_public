name: Build Electron App

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build-linux:
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install system deps
        run: |
          sudo apt-get update
          sudo apt-get install -y libx11-dev libxkbfile-dev libsecret-1-dev fakeroot rpm libnss3 libxss1 libasound2-dev

      - name: Install npm deps
        run: npm install

      - name: Build Linux AppImage
        run: npx electron-builder --linux AppImage

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: linux-app
          path: dist/*.AppImage

  build-windows:
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install npm deps
        run: npm install

      - name: Build Windows EXE
        run: npx electron-builder --win nsis

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-installer
          path: dist/*.exe

  build-macos:
    env:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install npm deps
        run: npm install

      - name: Build macOS DMG
        run: npx electron-builder --mac

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: macos-app
          path: |
            dist/*.dmg
            dist/*.app

